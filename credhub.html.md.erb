---
title: Configuring IPsec with CredHub
owner: Platform Security & Compliance Team
---

<strong><%= modified_date %></strong>

This topic describes how to create a <%= vars.product_full %> Runtime Config manifest to be used with CredHub.
The certificates can be generated by CredHub and monitored by Ops Manager<%= vars.ops_manager %>.

<p class="note warning"><strong>Warning:</strong> Certificate rotation cannot be done using the CredHub rotation mechanism.
  You need to manually generate new certificates.
</p>

## <a id="prerequisites"></a>Prerequisites
Before creating or modifying a manifest for <%= vars.product_short %>, you will need the following installed:

* The BOSH CLI. For more information about installation, see [Installing the CLI](https://bosh.io/docs/cli-v2-install/) in the BOSH documentation.
* The CredHub CLI. For more information about the CredHub CLI, see [credhub-cli](https://github.com/cloudfoundry-incubator/credhub-cli) in GitHub.
* An existing <%= vars.product_short %> manifest. For more information on creating an <%= vars.product_short %> manifest, see [Create the IPsec Manifest](installing.html#create-mfest)

## <a id="credhub_runtime_config"></a>Modify Runtime Config Manifest
To modify an existing manifest, do the following:

1. In the <%= vars.product_short %> manifest, add variables to use the CA and instance certificates.

  	<p class="note warning">
      	<strong>Warning: </strong> The instance certificate must be signed by the CA certificate.
			  Under <code>options</code> for the instance certificate variable, set <code>ca</code> to the
				variable name of the defined CA certificate.<br><br>

				The name of the variable must be prefixed with <code>/ipsec_addon/</code>.
  	</p>

  	Example of an <%= vars.product_short %> Runtime Config:

		releases:
		- name: ipsec
		  version: <VERSION>

		variables:
		- name: /ipsec_addon/<ROOT-CA-1>
		   type: certificate
		   options:
		      is_ca: true
		      common_name: ipsec_addon_<ROOT-CA-1>

		- name: /ipsec_addon/<INSTANCE-CERT-1>
		   type: certificate
		   options:
		     ca: /ipsec_addon_<ROOT-CA-1>
		     common_name: ipsec_addon_<INSTANCE-CERT-1>

		addons:
		- name: ipsec-addon
		    jobs:
		    - name: ipsec
		      release: ipsec
		      properties:
		        ipsec:
		          optional: false
		          ipsec_subnets:
		          - 10.0.1.1/20
		          no_ipsec_subnets:
		          - 10.0.1.10/32  # bosh director
		          - 10.0.1.4/32  # ops managers
		          instance_certificate: ((/ipsec_addon/<INSTANCE-CERT-1>.private_key))
		          instance_private_key: ((/ipsec_addon/<INSTANCE-CERT-1>.certificate))
		          ca_certificates:
		            - ((/ipsec_addon/<ROOT-CA-1>.ca))
		    include:
		      stemcell:
		      - os: ubuntu-trusty
		      - os: ubuntu-xenial

	Where:
	* `<VERSION>` is the version of <%= vars.product_short %> you are using.
	* `<ROOT-CA-1>` is the variable name and accessor for the `.ca` root certificate.
	* `<INSTANCE-CERT-1>` is the instance variable name and accessor for the `.private_key` and `.certificate`.


## <a id="credhub_cert_rotation"></a>Rotating Certificates with CredHub
To rotate your certificates using CredHub, follow this procedure:

### <a id="retrieve_runtime_config"></a>Download Runtime Config and SSH onto the <%= vars.ops_manager %> VM
1. Use the BOSH CLI to download the <%= vars.product_short %> Runtime Config:

		bosh -e BOSH-ENVIRONMENT runtime-config > PATH-TO-SAVE-THE-RUNTIME-CONFIG

	Where:
	* `BOSH-ENVIRONMENT` is the alias for your BOSH Director
	* `PATH-TO-SAVE-THE-RUNTIME-CONFIG` is the location where you want to save the runtime configuration.

1. SSH onto the <%= vars.ops_manager %> VM.
<!-- TODO: Add a reference similar to https://docs.pivotal.io/platform/2-9/customizing/ops-man-api.html#uaa -->

1. Target the CredHub API server (The CredHub API is the bosh director).

	For example:
	<pre class="terminal">
  ~$ credhub api --server 10.0.0.5:8844 --ca-cert /var/tempest/workspaces/default/root_ca_certificate
	Setting the target url: https<span>:</span>//10.0.0.5:8844
	</pre>

### <a id="login_credhub"></a>Retrieve UAA Admin Credentials and Login to CredHub
Once you have targeted the CredHub API server, follow this procedure:

1. Login to <%= vars.ops_manager %>
1. Navigate to the **Credentials** tab on the **BOSH Director** tile.
1. Open "UAA Admin User Credentials" to retrieve the credentials
1. Login to CredHub using the retrieved credentials:

	<pre class="terminal">
  ~$ credhub login
	username: admin
	password: **************************************
	Login Successful
	</pre>

1. Use the CredHub CLI to verify that the new certificate variable names are not already in use:

		~$ credhub find -n /ipsec_addon/<ROOT-CA-2>
		~$ credhub find -n /ipsec_addon/<INSTANCE-CERT-2>

	Where:
	* `<ROOT-CA-2>` is the variable name and accessor for the new `.ca` root certificate.
	* `<INSTANCE-CERT-2>` is the instance variable name and accessor for the new `.private_key` and `.certificate`.


	For example:

	<pre class="terminal">
	~$ credhub find -n /ipsec_addon/root-ca_2
	No credentials exist which match the provided parameters

	~$ credhub find -n /ipsec_addon/instance_cert_2
	No credentials exist which match the provided parameters
	</pre>

	<p class="note"><strong>Note:</strong> If certificates already exist with the new variable names you have
		selected, you must use a different name.
	</p>

### <a id="add-new-variables"></a>Add New Certificate Variables to the Runtime Config
After verifying that the new variables are not already in use, follow this procedure:

1. Add the new set of variables for the CA certificate, instance certicate,
	and private key to your <%= vars.product_short %> Runtime Config:

		variables:
		- name: /ipsec_addon/<ROOT-CA-1>
		   type: certificate
		   options:
		      is_ca: true
		      common_name: ipsec_addon_<ROOT-CA-1>

		- name: /ipsec_addon/<INSTANCE-CERT-1>
		   type: certificate
		   options:
		     ca: /ipsec_addon/<ROOT-CA-1>
		     common_name: ipsec_addon_<INSTANCE-CERT-1>

		- name: /ipsec_addon/<ROOT-CA-2>
		   type: certificate
		   options:
		      is_ca: true
		      common_name: ipsec_addon_<ROOT-CA-2>

		- name: /ipsec_addon/<INSTANCE-CERT-2>
		   type: certificate
		   options:
		     ca: /ipsec_addon/<ROOT-CA-2>
		     common_name: ipsec_addon_<INSTANCE-CERT-2>

	Where:
	* `<ROOT-CA-1>` is the variable name and accessor for the current `.ca` root certificate.
	* `<INSTANCE-CERT-1>` is the instance variable name and accessor for the current `.private_key` and `.certificate`.
	* `<ROOT-CA-2>` is the variable name and accessor for the new `.ca` root certificate.
	* `<INSTANCE-CERT-2>` is the instance variable name and accessor for the new `.private_key` and `.certificate`.

1. Add a new item in `ipsec.ca_certificates` with the new variable name and accessor to the certificate.
  For example:

    ```
    addons:
    - name: ipsec-addon
        jobs:
        - name: ipsec
          release: ipsec
          properties:
            ipsec:
              optional: false
              ipsec_subnets:
              - 10.0.1.1/20
              no_ipsec_subnets:
              - 10.0.1.10/32  # bosh director
              - 10.0.1.4/32 # ops managers
              instance_certificate: ((/ipsec_addon/instance_cert_1.private_key))
              instance_private_key: ((/ipsec_addon/instance_cert_1.certificate))
              ca_certificates:
                - ((/ipsec_addon/root_ca_1.certificate))
                - ((/ipsec_addon/<ROOT-CA-2>.certificate))
    ```
  Where:
	* `<ROOT-CA-2>` is the variable name and accessor for the new `.ca` root certificate.

1. Save and update the <%= vars.product_short %> Runtime Config:

    ```
    bosh -e BOSH-ENVIRONMENT update-runtime-config --name=ipsec PATH-TO-SAVE-THE-RUNTIME-CONFIG
    ```

    Where:
    VARIOABLES HERE

1. Perform an **Apply Changes** to the entire foundation
1. Verify the output when updating the runtime-config:

	<pre class="terminal">
		  addons:
		  - name: ipsec-addon
		    properties:
		      ipsec:
		        ca_certificates:
		+       - "&lt;redacted&gt;"

		  variables:
		+ - name: "/ipsec_addon/root_ca_2"
		+   options:
		+     common_name: ipsec_addon_root_ca_2
		+     is_ca: true
		+   type: certificate
		+ - name: "/ipsec_addon/instance_cert_2"
		+   options:
		+     ca: "/ipsec_addon/root_ca_2"
		+     common_name: ipsec_addon_instance_cert_2
		+   type: certificate
	</pre>

1. Set `instance_certificate` with the new variable name and accessor to the certificate.
1. Set `instance_private_key` with the new variable name and accessor to the private key.

  For example:

    properties:
      ipsec:
        optional: false
        ipsec_subnets:
        - 10.0.1.1/20
        no_ipsec_subnets:
        - 10.0.1.10/32  # bosh director
        - 10.0.1.4/32 # ops managers
        instance_certificate: ((/ipsec_addon/instance_cert_2.private_key))
        instance_private_key: ((/ipsec_addon/instance_cert_2.certificate))
        ca_certificates:
          - ((/ipsec_addon/root_ca_1.certificate))
          - ((/ipsec_addon/root_ca_2.certificate))

1. Save and update the <%= vars.product_short %> Runtime Config:

    ```
    bosh -e BOSH-ENVIRONMENT update-runtime-config --name=ipsec PATH-TO-SAVE-THE-RUNTIME-CONFIG
    ```

    Where:
    VARIOABLES HERE

1. Perform an **Apply Changes** to the entire foundation
1. Verify the output when updating the runtime-config:

		<pre class="terminal">
		  addons:
		  - name: ipsec-addon
		    properties:
		      ipsec:
		-       instance\_certificate: "&lt;redacted&gt;"
		+       instance\_certificate: "&lt;redacted&gt;"
		-       instance\_private_key: "&lt;redacted&gt;"
		+       instance\_private_key: "&lt;redacted&gt;"
		</pre>

1. Remove the old set of certificate variables: `/ipsec_addon/<ROOT-CA-1>`, `/ipsec_addon/<INSTANCE-CERT-1>`
1. Remove the old `ipsec.ca_certificates` certificate entry: `((/ipsec_addon/<ROOT-CA-1>.certificate))`

1. Verify that the <%= vars.product_short %> Runtime Config does not have references to these old certificates.

    For example:
    <pre>
      <strong>variables:</strong>
	  - name: /ipsec_addon/<ROOT-CA-2>
	     type: certificate
	     options:
	        is_ca: true
	        common_name: ipsec_addon_<ROOT-CA-2>

	  - name: /ipsec_addon/<INSTANCE-CERT-2>
	     type: certificate
	     options:
	       ca: /ipsec_addon/<ROOT-CA-2>
	       common_name: ipsec_addon_<INSTANCE-CERT-2>

	  addons:
	  - name: ipsec-addon
	      <strong>jobs</strong>:
	      - <strong>name</strong>: ipsec
	        release: ipsec
	        properties:
	          ipsec:
	            <strong>optional</strong>: false
	            <strong>ipsec_subnets</strong>:
	            - 10.0.1.1/20
	            <strong>no_ipsec_subnets</strong>:
	            - 10.0.1.10/32  # bosh director
	            - 10.0.1.4/32 # ops managers
	            <strong>instance_certificate</strong>: ((/ipsec_addon/<INSTANCE-CERT-2>.private_key))
	            <strong>instance_private_key</strong>: ((/ipsec_addon/<INSTANCE-CERT-2>.certificate))
	            <strong>ca_certificates</strong>:
	              - ((/ipsec_addon/<ROOT-CA-2>.certificate))
	      include:
	        stemcell:
	        - <strong>os</strong>: ubuntu-trusty
	        - <strong>os</strong>: ubuntu-xenial
    </pre>

    Where:
  	* `<ROOT-CA-1>` is the variable name and accessor for the current `.ca` root certificate.
  	* `<INSTANCE-CERT-1>` is the instance variable name and accessor for the current `.private_key` and `.certificate`.
  	* `<ROOT-CA-2>` is the variable name and accessor for the new `.ca` root certificate.
  	* `<INSTANCE-CERT-2>` is the instance variable name and accessor for the new `.private_key` and `.certificate`.



1. Update the runtime config and apply changes to the entire foundation
       Verify the output when updating the runtime-config:
		<pre class="terminal">
		  addons:
		  - name: ipsec-addon
		    properties:
		      ipsec:
		        ca_certificates:
		-       - "&lt;redacted&gt;"

		  variables:
		- - name: "/ipsec_addon/root_ca_1"
		-   options:
		-     common_name: ipsec_addon_root_ca_1
		-     is_ca: true
		-   type: certificate
		- - name: "/ipsec_addon/instance_cert_1"
		-   options:
		-     ca: "/ipsec_addon/root_ca_1"
		-     common_name: ipsec_addon_instance_cert_1
		-   type: certificate
		</pre>

1. Remove the set of certificates from CredHub

	 	credhub delete -n /ipsec_addon/root_ca_1
		credhub delete -n /ipsec_addon/instance_cert_1
